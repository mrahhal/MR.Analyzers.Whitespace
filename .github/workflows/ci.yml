name: CI

on:
  push:
    branches:
    - main
    tags:
    - v*
  pull_request:
    branches:
    - main

env:
  dotnet_sdk_version: '6.0.x'
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      is_release: ${{ steps.analyze_tag.outputs.is_release }}
      is_prerelease: ${{ steps.analyze_tag.outputs.is_prerelease }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup .NET Core for running tests
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.415

    - name: Setup dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.dotnet_sdk_version }}

    - name: Build
      shell: pwsh
      run: ./build -Pack

    - name: Analyze tag ${{ github.ref }}
      id: analyze_tag
      shell: bash
      run: |
        if [[ ${{ github.ref }} =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+ ]]; then
          echo "Release tag detected"
          echo "::set-output name=is_release::true"
          if [[ ${{ github.ref }} =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+.*- ]]; then
            echo "Prerelease tag detected"
            echo "::set-output name=is_prerelease::true"
          fi
        fi

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: artifacts
        path: artifacts

  release:
    needs: build
    runs-on: ubuntu-latest
    if: needs.build.outputs.is_release == 'true'

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.dotnet_sdk_version }}

    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        name: artifacts
        path: artifacts

    - name: Publish packages to nuget.org
      run: dotnet nuget push ./artifacts/packages/*.nupkg --skip-duplicate --api-key ${{ secrets.NUGET_ORG_API_KEY }} --source https://api.nuget.org/v3/index.json

    - name: Create GitHub release
      uses: ncipollo/release-action@v1
      with:
        prerelease: ${{ needs.build.outputs.is_prerelease }}
        token: ${{ secrets.GITHUB_TOKEN }}
        generateReleaseNotes: true
